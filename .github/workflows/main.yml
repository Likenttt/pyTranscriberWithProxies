# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install MinGW
        # You may pin to the exact commit or the version.
        # uses: egor-tensin/setup-mingw@f3c5d799aadf8fa230ac67a422b01dd085bbc96b
        uses: egor-tensin/setup-mingw@v2

      - name: Setup FFmpeg
        # You may pin to the exact commit or the version.
        # uses: FedericoCarboni/setup-ffmpeg@dbe266744738dd1fa54db0ecb35d11461c94a90a
        uses: FedericoCarboni/setup-ffmpeg@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip3 install pyQt5
          pip3 install autosub
      - name: build with pyinstaller
        run: |
          pyinstaller -F -w --icon=python.ico main.py
          dir
          cd dist
          dir
      - name: Create GitHub release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ env.GitAssemblyInformationalVersion }}
          title: Version ${{ env.GitAssemblyInformationalVersion }}
          prerelease: true
          files: |
            dist/*
      - run: |
          dotnet nuget update source docs-public-packages --username docascode --password ${{ secrets.AZURE_DEVOPS_FEED_TOKEN }}
          dotnet nuget push --source docs-public-packages --api-key az drop/**/*.nupkg --skip-duplicate

